{"version":3,"file":"js/PrintProposal.61fcf709.js","mappings":"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","sources":["webpack://apps-factory/./node_modules/vue-loader/dist/exportHelper.js","webpack://apps-factory/./src/types/component.types.ts","webpack://apps-factory/./src/types/location.enum.ts","webpack://apps-factory/./src/types/oidc.types.ts","webpack://apps-factory/./src/types/proposal.types.ts","webpack://apps-factory/./src/types/sort-filter.types.ts","webpack://apps-factory/./src/constants/index.ts","webpack://apps-factory/./src/constants/print-structure/applicant-section.ts","webpack://apps-factory/./src/constants/print-structure/data-privacy-section.ts","webpack://apps-factory/./src/constants/print-structure/overview-section.ts","webpack://apps-factory/./src/constants/print-structure/participant-section.ts","webpack://apps-factory/./src/constants/print-structure/project-responsibility-section.ts","webpack://apps-factory/./src/constants/print-structure/project-user-section.ts","webpack://apps-factory/./src/constants/print-structure/requested-data-section.ts","webpack://apps-factory/./src/constants/print-structure/user-project-section.ts","webpack://apps-factory/./src/utils/date.util.ts","webpack://apps-factory/./node_modules/vue-loader/dist/index.js","webpack://apps-factory/./src/components/Shared/DefinitionCardItem.vue","webpack://apps-factory/./src/components/Shared/DefinitionCard.vue","webpack://apps-factory/./src/print-module/components/PrintCard.vue","webpack://apps-factory/./src/utils/empty-string.util.ts","webpack://apps-factory/./src/utils/form-transform/participant-applicant-transform.util.ts","webpack://apps-factory/./src/utils/form-transform/transform-user-project.util.ts","webpack://apps-factory/./src/utils/form-transform/index.ts","webpack://apps-factory/./src/print-module/pages/PrintProposal.vue"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","export enum FdpgInputSize {\n  Default = 'default',\n  Small = 'small',\n}\n\nexport enum CardType {\n  Draft = 'Draft',\n  Outstanding = 'Outstanding',\n  Ongoing = 'Ongoing',\n  Completed = 'Completed',\n  Archive = 'Archive',\n  Requested = 'Requested',\n  Pending = 'Pending',\n  Current = 'Current',\n}\n","export enum MiiLocation {\n  MRI = 'MRI',\n  KUM = 'KUM',\n  UKT = 'UKT',\n  UKU = 'UKU',\n  UKR = 'UKR',\n  UKS = 'UKS',\n  UKAU = 'UKAU',\n  Charité = 'Charité',\n  UMG = 'UMG',\n  MHH = 'MHH',\n  UKHD = 'UKHD',\n  UKSH = 'UKSH',\n  UKK = 'UKK',\n  UKM = 'UKM',\n  UKW = 'UKW',\n  UKDD = 'UKDD',\n  UKEr = 'UKEr',\n  UKF = 'UKF',\n  UKFR = 'UKFR',\n  UKGI = 'UKGI',\n  UKMR = 'UKMR',\n  UKG = 'UKG',\n  UMMD = 'UMMD',\n  UM = 'UM',\n  UMM = 'UMM',\n  UKA = 'UKA',\n  UKB = 'UKB',\n  UME = 'UME',\n  UKH = 'UKH',\n  UKE = 'UKE',\n  UKJ = 'UKJ',\n  UKL = 'UKL',\n  UMR = 'UMR',\n  UKD = 'UKD',\n  UKRUB = 'UKRUB',\n  KC = 'KC',\n  VirtualAll = 'VIRTUAL_ALL',\n}\n\nexport enum Countries {\n  AD = 'AD',\n  AT = 'AT',\n  AU = 'AU',\n  BE = 'BE',\n  BG = 'BG',\n  BR = 'BR',\n  CA = 'CA',\n  CH = 'CH',\n  CZ = 'CZ',\n  DE = 'DE',\n  DK = 'DK',\n  DZ = 'DZ',\n  EE = 'EE',\n  ES = 'ES',\n  FI = 'FI',\n  FR = 'FR',\n  GB = 'GB',\n  GR = 'GR',\n  HR = 'HR',\n  HU = 'HU',\n  ID = 'ID',\n  IE = 'IE',\n  IL = 'IL',\n  IN = 'IN',\n  IR = 'IR',\n  IS = 'IS',\n  IT = 'IT',\n  JP = 'JP',\n  KE = 'KE',\n  LI = 'LI',\n  LT = 'LT',\n  LU = 'LU',\n  LV = 'LV',\n  MT = 'MT',\n  MX = 'MX',\n  NL = 'NL',\n  NO = 'NO',\n  NZ = 'NZ',\n  PL = 'PL',\n  PR = 'PR',\n  PT = 'PT',\n  RO = 'RO',\n  RU = 'RU',\n  SA = 'SA',\n  SE = 'SE',\n  SI = 'SI',\n  TN = 'TN',\n  TW = 'TW',\n  UA = 'UA',\n  US = 'US',\n  ZA = 'ZA',\n  ZM = 'ZM',\n}\n","import { MiiLocation } from './location.enum'\nimport { Salutation } from './salutation.enum'\n\nexport interface IOidc {\n  access_token: string\n  expires_at: number\n  id_token: string\n  profile: IFdpgOidcProfile\n  refresh_token: string\n  scope: string\n  session_state: string\n  token_type: string\n}\n\nexport interface IFdpgBaseUser {\n  title?: string\n  salutation: Salutation\n  affiliation: string\n}\n\nexport interface IUserFromMii extends IFdpgBaseUser {\n  MII_LOCATION: MiiLocation\n}\n\nexport interface IUserFromExternalOrganization extends IFdpgBaseUser {\n  organization: IOrganization\n}\n\nexport type FdpgUser = IUserFromMii | IUserFromExternalOrganization\n\nexport interface IOrganization {\n  country: string\n  city: string\n  street: string\n  postalCode: string\n  houseNumber: string\n  name: string\n  email: string\n}\n\nexport interface IOidcProfile {\n  acr: string\n  auth_time: 1646727968\n  azp: string\n  email: string\n  email_verified: true\n  family_name: string\n  given_name: string\n  jti: string\n  name: string\n  preferred_username: string\n  realm_access: IOidcRealmAccess\n  session_state: string\n  sid: string\n  sub: string\n  typ: string\n}\n\nexport type IFdpgOidcProfile = IOidcProfile & FdpgUser\n\nexport interface IOidcRealmAccess {\n  roles: Role[]\n}\n\nexport enum Role {\n  Admin = 'Admin',\n  FdpgMember = 'FdpgMember',\n  Researcher = 'Researcher',\n  DizMember = 'DizMember',\n  UacMember = 'UacMember',\n}\n","import { CardType } from '@/types/component.types'\nimport { Countries, MiiLocation } from '@/types/location.enum'\nimport { Department } from './department.enum'\nimport { Role } from './oidc.types'\nimport { PanelQuery } from './sort-filter.types'\nimport { UploadType } from './upload.types'\nimport { IVersion } from './version.interface'\nimport { PublicationType } from './publication-type.enum'\n\nexport interface WithIdAndIsDone {\n  isDone?: boolean\n  _id?: string\n}\n\nexport type SortableFields = keyof Pick<\n  IProposal,\n  'submittedAt' | 'ownerName' | 'dueDateForStatus' | 'projectAbbreviation'\n>\n\nexport enum ProposalStatus {\n  Draft = 'DRAFT',\n  Rejected = 'REJECTED',\n  Archived = 'ARCHIVED',\n  Rework = 'REWORK',\n  FdpgCheck = 'FDPG_CHECK',\n  LocationCheck = 'LOCATION_CHECK',\n  Contracting = 'CONTRACTING',\n  ExpectDataDelivery = 'EXPECT_DATA_DELIVERY',\n  DataResearch = 'DATA_RESEARCH',\n  DataCorrupt = 'DATA_CORRUPT',\n  FinishedProject = 'FINISHED_PROJECT',\n  ReadyToArchive = 'READY_TO_ARCHIVE',\n}\n\nexport enum ParticipantType {\n  ProjectLeader = 'PROJECT_LEADER',\n  AdditionalProjectLeader = 'ADDITIONAL_PROJECT_LEADER',\n  DataReceiver = 'DATA_RECEIVER',\n  BiosampleReceiver = 'BIOSAMPLE_RECEIVER',\n  DataAndBiosampleReceiver = 'DATA_AND_BIOSAMPLE_RECEIVER',\n}\n\nexport enum ProjectUserType {\n  ApplicantAsPrivatePerson = 'APPLICANT_AS_PRIVATE_PERSON',\n  OrganizationOfProjectResponsible = 'ORGANIZATION_OF_PROJECT_RESPONSIBLE',\n}\n\nexport interface IResearcher extends WithIdAndIsDone {\n  title: string\n  firstName: string\n  lastName: string\n  affiliation: string\n  email: string\n}\n\nexport interface IResearcherIdentity extends IResearcher {\n  isExisting: boolean\n  isEmailVerified: boolean\n  isRegistrationComplete: boolean\n  participantType: ParticipantType\n  username: string\n}\n\nexport interface IInstitute extends WithIdAndIsDone {\n  name?: string\n  streetAddress?: string\n  houseNumber?: string | undefined\n  postalCode?: string\n  city?: string\n  country?: Countries\n  email?: string\n  miiLocation?: MiiLocation\n}\n\nexport interface IParticipantCategory extends WithIdAndIsDone {\n  category: ParticipantType\n}\n\nexport interface IParticipant extends WithIdAndIsDone {\n  researcher: IResearcher\n  institute: IInstitute\n  participantCategory: IParticipantCategory\n}\n\nexport interface IApplicant {\n  researcher: IResearcher\n  institute: IInstitute\n  participantCategory: IParticipantCategory\n}\n\nexport interface IProjectResponsible {\n  institute: IInstitute\n  participantCategory: IParticipantCategory\n  researcher: IResearcher\n  projectResponsibility: IProjectResponsibility\n}\n\nexport interface IProjectResponsibility extends WithIdAndIsDone {\n  applicantIsProjectResponsible: boolean\n}\n\nexport interface IProjectUser extends WithIdAndIsDone {\n  projectUserType: ProjectUserType\n}\n\nexport interface IGeneralProjectInformation extends WithIdAndIsDone {\n  projectTitle: string\n  desiredStartTime: string\n  projectDuration: number | undefined\n  projectFunding: string\n  fundingReferenceNumber: string\n}\n\nexport interface IProjectDetails extends WithIdAndIsDone {\n  simpleProjectDescription: string\n  department: Department[]\n  scientificBackground: string\n  hypothesisAndQuestionProjectGoals: string\n  materialAndMethods: string\n}\n\nexport interface IEthicVote extends WithIdAndIsDone {\n  isDone: boolean\n  isExisting: boolean\n  ethicsCommittee: string\n  ethicsVoteNumber: string\n  voteFromDate: string\n  admitReputationOfAttachment: boolean\n}\n\nexport interface IResourceAndRecontact extends WithIdAndIsDone {\n  hasEnoughResources: boolean\n  isRecontactingIntended: boolean\n}\n\nexport interface IAppendix {\n  name: string\n  size: number\n  path: string\n}\n\nexport interface IPublication {\n  _id?: string\n  type: PublicationType\n  description: string\n  authors: string\n}\n\nexport enum ProposalTypeOfUse {\n  Distributed = 'DISTRIBUTED',\n  Centralized = 'CENTRALIZED',\n  Biosample = 'BIOSAMPLE',\n}\n\nexport interface IBiosample {\n  _id?: string\n  type?: string\n  count?: string\n  parameter?: string\n  laboratoryResources?: string\n  requirements?: string\n}\n\nexport interface IFeasibility extends WithIdAndIsDone {\n  id?: number\n  details?: string\n}\n\nexport interface IPropertyRights extends WithIdAndIsDone {\n  options: string\n}\n\nexport interface IPlannedPublication extends WithIdAndIsDone {\n  noPublicationPlanned: boolean\n  publications: IPublication[]\n}\n\nexport interface IAddressees extends WithIdAndIsDone {\n  desiredLocations: MiiLocation[]\n}\n\nexport interface ITypeOfUse extends WithIdAndIsDone {\n  usage: ProposalTypeOfUse[]\n  dataPrivacyExtra?: string\n}\n\nexport interface IInformationOnRequestedBioSamples extends WithIdAndIsDone {\n  biosamples: IBiosample[]\n}\n\nexport interface IUserProject {\n  generalProjectInformation: IGeneralProjectInformation\n  feasibility: IFeasibility\n  projectDetails: IProjectDetails\n  ethicVote: IEthicVote\n  resourceAndRecontact: IResourceAndRecontact\n  propertyRights: IPropertyRights\n  plannedPublication: IPlannedPublication\n  addressees: IAddressees\n  typeOfUse: ITypeOfUse\n  informationOnRequestedBioSamples: IInformationOnRequestedBioSamples\n}\n\nexport interface IRequestedData extends WithIdAndIsDone {\n  patientInfo: string\n  dataInfo: string\n  desiredDataAmount?: number\n}\n\nexport enum ProjectHistoryType {\n  ProposalCreated = 'PROPOSAL_CREATING',\n  ProposalFdpgCheck = 'PROPOSAL_FDPG_CHECK',\n  ProposalRework = 'PROPOSAL_REWORK',\n  ProposalRejected = 'PROPOSAL_REJECT',\n  ProposalLocationCheck = 'PROPOSAL_LOCATION_CHECK',\n  ProposalContracting = 'PROPOSAL_CONTRACTING',\n  ProposalDataDelivery = 'PROPOSAL_DATA_DELIVERY',\n  ProposalDataCorrupt = 'PROPOSAL_DATA_CORRUPT',\n  ProposalDataResearch = 'PROPOSAL_DATA_RESEARCH',\n  ProposalFinished = 'PROPOSAL_FINISHED',\n  ProposalReadyToArchive = 'PROPOSAL_READY_TO_ARCHIVE',\n  ProposalArchived = 'PROPOSAL_ARCHIVED',\n\n  DizVoteAccept = 'DIZ_VOTE_ACCEPT',\n  DizVoteDecline = 'DIZ_VOTE_DECLINE',\n  UacVoteAccept = 'UAC_VOTE_ACCEPT',\n  UacVoteConditionalAccept = 'UAC_VOTE_CONDITIONAL_ACCEPT',\n  UacVoteDecline = 'UAC_VOTE_DECLINE',\n  UacConditionAccept = 'UAC_CONDITION_ACCEPT',\n  UacConditionDecline = 'UAC_CONDITION_DECLINE',\n  ContractResearcherApproved = 'CONTRACT_RESEARCHER_APPROVED',\n  ContractResearcherRejected = 'CONTRACT_RESEARCHER_REJECTED',\n  ContractUacApproved = 'CONTRACT_UAC_APPROVED',\n  ContractUacRejected = 'CONTRACT_UAC_REJECTED',\n  ContractSystemRejected = 'CONTRACT_SYSTEM_REJECTED',\n}\n\nexport enum UploadFileType {\n  Docx = 'DOCX',\n  Pdf = 'PDF',\n}\n\nexport enum ProjectStatusType {\n  neutral = 'neutral',\n  info = 'info',\n  success = 'success',\n  warning = 'warning',\n}\n\nexport enum ProjectFetchingType {\n  TO_CHECK = 'TO_CHECK',\n  IN_WORK = 'IN_WORK',\n}\n\nexport interface IUpload {\n  fileName: string\n  fileSize: number\n  type: UploadType\n  createdAt: string\n  _id: string\n}\n\nexport interface PanelType {\n  type: CardType\n  query: PanelQuery\n  header: string\n  isTable?: boolean\n}\n\nexport interface IProposalHistory {\n  createdAt: string\n  type: ProjectHistoryType\n  proposalVersion: { minor: number; major: number }\n}\ninterface IPublicationBase {\n  title: string\n  doi: string\n  link: string\n}\nexport interface IPublicationGet extends IPublicationBase {\n  updatedAt: string\n  createdAt: string\n  _id: string\n}\n\nexport interface IPublicationCreateAndUpdate extends IPublicationBase {}\n\ninterface IReportBase {\n  content: string\n  title: string\n}\nexport interface IReportFile extends IUpload {\n  downloadUrl: string\n  mimetype: string\n}\nexport interface IReportGet extends IReportBase {\n  _id?: string\n  createdAt?: string\n  updatedAt?: string\n  uploads: IReportFile[]\n}\n\nexport interface IReportCreate extends IReportBase {\n  files: File[]\n}\n\nexport interface IReportUpdate extends IReportCreate {\n  keepUploads: string[]\n}\nexport interface IFdpgChecklist {\n  isRegistrationLinkSent?: boolean\n  isUnique?: boolean\n  isAttachmentsChecked?: boolean\n  isChecked?: boolean\n}\n\nexport interface IsDoneDetail {\n  path: string\n  value: boolean\n  _id: string\n}\nexport interface IIsDoneOverview {\n  fieldCount: number\n  isDoneCount: number\n  fields: IsDoneDetail[]\n}\n\nexport interface IConditionalApproval {\n  location: MiiLocation\n  isAccepted: boolean\n  isContractSigned?: boolean\n  dataAmount: number\n  uploadId: string\n  _id: string\n  createdAt: string\n  reviewedAt?: string\n  signedAt?: string\n}\n\nexport interface IUacApproval {\n  location: MiiLocation\n  dataAmount: number\n  isContractSigned?: boolean\n  _id: string\n  createdAt: string\n  signedAt?: string\n}\n\nexport enum LocationState {\n  IsDizCheck = 'DIZ_CHECK',\n  DizApproved = 'DIZ_APPROVED',\n  UacApproved = 'UAC_APPROVED',\n  SignedContract = 'SIGNED_CONTRACT',\n  SignedContractAndContractingDone = 'SIGNED_CONTRACT_AND_CONTRACTING_DONE',\n  RequestedButExcluded = 'REQUESTED_BUT_EXCLUDED',\n  NotRequested = 'NOT_REQUESTED',\n  ConditionalApprovalDeclined = 'CONDITIONAL_APPROVAL_DECLINED',\n  ResearcherRejectedContract = 'RESEARCHER_REJECTED_CONTRACT',\n  ResearcherAcceptedContract = 'RESEARCHER_ACCEPTED_CONTRACT',\n  ConditionalApprovalAccepted = 'CONDITIONAL_APPROVAL_ACCEPTED',\n  ConditionalApprovalPending = 'CONDITIONAL_APPROVAL_PENDING',\n}\nexport interface IOwner {\n  id: string\n  firstName: string\n  lastName: string\n  email: string\n  username?: string\n  miiLocation?: MiiLocation\n  role?: Role\n}\n\n// !!\n// When adding something here:\n// Make sure to modify the transformForm method\n// src/utils/form-transform/index.ts\n// !!\nexport interface IProposal {\n  _id?: string\n  participants: IParticipant[]\n  applicant: IApplicant\n  projectResponsible: IProjectResponsible\n  projectUser: IProjectUser\n  projectAbbreviation: string\n  userProject: IUserProject\n  requestedData: IRequestedData\n  isLocked: boolean\n  status?: ProposalStatus\n  locationStatus?: LocationState\n  createdAt?: string\n  submittedAt?: string\n  updatedAt?: string\n  dueDateForStatus?: string\n  history?: IProposalHistory[]\n  numberOfRequestedLocations?: number\n  numberOfApprovedLocations?: number\n  numberOfSignedLocations?: number\n  version?: IVersion\n  owner: IOwner\n  ownerId?: string\n  ownerName?: string\n  publications: IPublicationGet[]\n  reports: IReportGet[]\n  uploads?: IUpload[]\n  contractAcceptedByResearcher: boolean\n  contractRejectedByResearcher: boolean\n  contractRejectedByResearcherReason?: string\n  researcherSignedAt: string\n  fdpgChecklist?: IFdpgChecklist\n  isDoneOverview?: IIsDoneOverview\n  openFdpgTasks: IOpenFdpgTask[]\n\n  // LOCATION Tasks --->\n  // The following arrays should be used as a flow.\n  // One location should only be in one state at the same time\n  openDizChecks: MiiLocation[]\n  dizApprovedLocations: MiiLocation[]\n  uacApprovedLocations: MiiLocation[]\n  requestedButExcludedLocations: MiiLocation[]\n  signedContracts: MiiLocation[]\n  // LOCATION Tasks <----\n\n  // Conditional and UAC approval are stored additionally to the \"flow-arrays\" and are persistent\n  conditionalApprovals: IConditionalApproval[]\n  uacApprovals: IUacApproval[]\n  totalPromisedDataAmount?: number\n  totalContractedDataAmount?: number\n  declineReasons: IDeclineReason[]\n}\n\nexport enum FdpgTaskType {\n  // Multiple tasks of this type are possible to be open for one proposal:\n  Comment = 'COMMENT',\n  ConditionApproval = 'CONDITION_APPROVAL',\n\n  // Only once:\n  UacApprovalComplete = 'UAC_APPROVAL_COMPLETE',\n  DataAmountReached = 'DATA_AMOUNT_REACHED',\n  ContractComplete = 'CONTRACT_COMPLETE',\n  DueDateReached = 'DUE_DATE_REACHED',\n}\n\ninterface IOpenFdpgTask {\n  _id: string\n  type: FdpgTaskType\n}\n\nexport type IProposalMarkConditionAcceptedReturnDto = Pick<\n  IProposal,\n  | 'uploads'\n  | 'history'\n  | 'numberOfApprovedLocations'\n  | 'totalPromisedDataAmount'\n  | 'openDizChecks'\n  | 'dizApprovedLocations'\n  | 'uacApprovedLocations'\n  | 'requestedButExcludedLocations'\n  | 'conditionalApprovals'\n  | 'uacApprovals'\n>\n\nexport interface IProposalDetail {\n  _id: string\n  createdAt: string\n  updatedAt: string\n  submittedAt: string\n  dueDateForStatus?: string\n  isLocked: boolean\n  //Frontend only\n  computedDueDate?: number\n\n  projectAbbreviation: string\n  projectTitle: string\n  ownerId: string\n  ownerName: string\n\n  status: ProposalStatus\n  requestedLocationsCount: number\n  openDizChecksCount: number\n  dizApprovedCount: number\n  uacApprovedCount: number\n  approvedLocationsCount: number\n  signedContractsCount: number\n  requestedButExcludedCount: number\n  desiredDataAmount: number\n  totalPromisedDataAmount: number\n  totalContractedDataAmount: number\n  openFdpgTasks: IOpenFdpgTask[]\n  locationState: LocationState\n  contractAcceptedByResearcher: boolean\n  contractRejectedByResearcher: boolean\n}\n\nexport interface IDeclineReason {\n  type: DeclineType\n  reason: string\n  location: MiiLocation\n  createdAt: string\n}\n\nexport enum DeclineType {\n  DizApprove = 'DIZ_APPROVE',\n  UacApprove = 'UAC_APPROVE',\n  LocationSign = 'LOCATION_SIGN',\n}\n\nexport interface IProposalCount {\n  total?: number\n  critical?: number\n  high?: number\n  medium?: number\n  low?: number\n}\n","export enum SortDirection {\n  ASC = 'asc',\n  DESC = 'desc',\n}\n\nexport enum Status {\n  Draft = 'DRAFT',\n  Outstanding = 'SUBMITTED__TASKS',\n  Pending = 'ONGOING__CONTRACTING',\n  Ongoing = 'ONGOING__RUNNING_PROJECT',\n  Completed = 'COMPLETED__READY_TO_ARCHIVE',\n  Archive = 'ARCHIVED',\n  Requested = 'SUBMITTED__WAITING',\n  // DRAFT = 'DRAFT',\n  // SUBMITTED__WAITING = 'SUBMITTED__WAITING',\n  // SUBMITTED__TASKS = 'SUBMITTED__TASKS',\n  // SUBMITTED__REJECTED = 'SUBMITTED__REJECTED',\n  // ONGOING__CONTRACTING = 'ONGOING__CONTRACTING',\n  // ONGOING__EXPECT_DATA_DELIVERY = 'ONGOING__EXPECT_DATA_DELIVERY',\n  // ONGOING__RUNNING_PROJECT = 'ONGOING__RUNNING_PROJECT',\n  // ONGOING__FINISHED_PROJECT = 'ONGOING__FINISHED_PROJECT',\n  // COMPLETED__WAITING_FOR_PUBLICATIONS = 'COMPLETED__WAITING_FOR_PUBLICATIONS',\n  // COMPLETED__READY_TO_ARCHIVE = 'COMPLETED__READY_TO_ARCHIVE',\n  // ARCHIVED = 'ARCHIVED'\n}\n\nexport enum PanelQuery {\n  // General\n  Archived = 'ARCHIVED',\n\n  // Researcher\n  Draft = 'DRAFT',\n  ResearcherPending = 'RESEARCHER_PENDING',\n  ResearcherOngoing = 'RESEARCHER_ONGOING',\n  ResearcherFinished = 'RESEARCHER_FINISHED',\n\n  // DIZ\n  DizPending = 'DIZ_PENDING',\n  DizOngoing = 'DIZ_ONGOING',\n  DizFinished = 'DIZ_FINISHED',\n  DizRequested = 'DIZ_REQUESTED',\n\n  // UAC\n  UacPending = 'UAC_PENDING',\n  UacOngoing = 'UAC_ONGOING',\n  UacFinished = 'UAC_FINISHED',\n  UacRequested = 'UAC_REQUESTED',\n\n  // FDPG\n  FdpgRequestedToCheck = 'FDPG_REQUESTED_TO_CHECK',\n  FdpgRequestedInWork = 'FDPG_REQUESTED_IN_WORK',\n  FdpgPendingToCheck = 'FDPG_PENDING_TO_CHECK',\n  FdpgPendingInWork = 'FDPG_PENDING_IN_WORK',\n  FdpgOngoingToCheck = 'FDPG_ONGOING_TO_CHECK',\n  FdpgOngoingInWork = 'FDPG_ONGOING_IN_WORK',\n  FdpgFinished = 'FDPG_FINISHED',\n}\n\nexport interface ISortAndOrderBy<T> {\n  order?: SortDirection\n  sortBy?: keyof T & string\n  panelQuery: PanelQuery\n}\n","import { CardType } from '@/types/component.types'\nimport { Countries, MiiLocation } from '@/types/location.enum'\nimport { Role } from '@/types/oidc.types'\nimport { ProjectFetchingType } from '@/types/proposal.types'\nimport { PanelQuery } from '@/types/sort-filter.types'\n\ninterface IMiiLocationInfo {\n  city: string\n  display: string\n  definition: string\n  email: string\n}\n\nexport const MII_LOCATIONS: Record<MiiLocation, IMiiLocationInfo> = {\n  [MiiLocation.MRI]: {\n    city: 'München',\n    display: 'Klinikum rechts der Isar',\n    definition: 'DIFUTURE',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.KUM]: {\n    city: 'München',\n    display: 'Klinikum der Universität München',\n    definition: 'DIFUTURE',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKT]: {\n    city: 'Tübingen',\n    display: 'Universitätsklinikum Tübingen',\n    definition: 'DIFUTURE',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKU]: {\n    city: 'Ulm',\n    display: 'Universitätsklinikum Ulm',\n    definition: 'DIFUTURE',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKR]: {\n    city: 'Regensburg',\n    display: 'Universitätsklinikum Regensburg',\n    definition: 'DIFUTURE',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKS]: {\n    city: 'Homburg',\n    display: 'Universitätsklinikum des Saarlandes',\n    definition: 'DIFUTURE',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKAU]: {\n    city: 'Augsburg',\n    display: 'Universitätsklinikum Augsburg',\n    definition: 'DIFUTURE',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.Charité]: {\n    city: 'Berlin',\n    display: 'Charité - Universitätsmedizin Berlin',\n    definition: 'HiGHmed',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UMG]: {\n    city: 'Göttingen',\n    display: 'Universitätsmedizin Göttingen',\n    definition: 'HiGHmed',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.MHH]: {\n    city: 'Hannover',\n    display: 'Medizinische Hochschule Hannover',\n    definition: 'HiGHmed',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKHD]: {\n    city: 'Heidelberg',\n    display: 'Universitätsklinikum Heidelberg',\n    definition: 'HiGHmed',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKSH]: {\n    city: 'Kiel',\n    display: 'Universitätsklinikum Schleswig-Holstein',\n    definition: 'HiGHmed',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKK]: {\n    city: 'Köln',\n    display: 'Universitätsklinikum Köln',\n    definition: 'HiGHmed',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKM]: {\n    city: 'Münster',\n    display: 'Universitätsklinikum Münster',\n    definition: 'HiGHmed',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKW]: {\n    city: 'Würzburg',\n    display: 'Universitätsklinikum Würzburg',\n    definition: 'HiGHmed',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKDD]: {\n    city: 'Dresden',\n    display: 'Universitätsklinikum Carl Gustav Carus Dresden',\n    definition: 'MIRACUM',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKEr]: {\n    city: 'Erlangen',\n    display: 'Universitätsklinikum Erlangen',\n    definition: 'MIRACUM',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKF]: {\n    city: 'Frankfurt',\n    display: 'Universitätsklinikum Frankfurt',\n    definition: 'MIRACUM',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKFR]: {\n    city: 'Freiburg',\n    display: 'Universitätsklinikum Freiburg',\n    definition: 'MIRACUM',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKGI]: {\n    city: 'Gießen',\n    display: 'Universitätsklinikum Gießen',\n    definition: 'MIRACUM',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKMR]: {\n    city: 'Marburg',\n    display: 'Universitätsklinikum Marburg',\n    definition: 'MIRACUM',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKG]: {\n    city: 'Greifswald',\n    display: 'Universitätsmedizin Greifswald',\n    definition: 'MIRACUM',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UMMD]: {\n    city: 'Magdeburg',\n    display: 'Universitätsklinikum Magdeburg',\n    definition: 'MIRACUM',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UM]: {\n    city: 'Mainz',\n    display: 'Universitätsmedizin der Johannes Gutenberg-Universität Mainz',\n    definition: 'MIRACUM',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UMM]: {\n    city: 'Mannheim',\n    display: 'Universitätsklinikum Mannheim',\n    definition: 'MIRACUM',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.KC]: {\n    city: 'Chemnitz',\n    display: ' Klinikum Chemnitz gGmbH',\n    definition: 'MIRACUM',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKA]: {\n    city: 'Aachen',\n    display: 'Uniklinik RWTH Aachen',\n    definition: 'SMITH',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKB]: {\n    city: 'Bonn',\n    display: 'Universitätsklinikum Bonn',\n    definition: 'SMITH',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UME]: {\n    city: 'Essen',\n    display: 'Universitätsklinikum Essen',\n    definition: 'SMITH',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKH]: {\n    city: 'Halle (Saale)',\n    display: 'Universitätsklinikum Halle (Saale)',\n    definition: 'SMITH',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKE]: {\n    city: 'Hamburg-Eppendorf',\n    display: 'Universitätsklinikum Hamburg-Eppendorf',\n    definition: 'SMITH',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKJ]: {\n    city: 'Jena',\n    display: 'Universitätsklinikum Jena',\n    definition: 'SMITH',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKL]: {\n    city: 'Leipzig',\n    display: 'Universitätsklinikum Leipzig',\n    definition: 'SMITH',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UMR]: {\n    city: 'Rostock',\n    display: 'Universitätsmedizin Rostock',\n    definition: 'SMITH',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKD]: {\n    city: 'Düsseldorf',\n    display: 'Universitätsklinikum Düsseldorf',\n    definition: 'SMITH',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.UKRUB]: {\n    city: 'Bochum',\n    display: 'Universitätsklinikum der Ruhr-Universität Bochum',\n    definition: 'SMITH',\n    email: 'some.todo@af-universität.de',\n  },\n\n  [MiiLocation.VirtualAll]: {\n    city: 'Alle Standorte',\n    display: 'Alle Standorte',\n    definition: 'VIRTUAL',\n    email: '',\n  },\n}\n\nexport const INACTIVE_LOCATIONS = [MiiLocation.UKS, MiiLocation.UMR, MiiLocation.UKD, MiiLocation.UKRUB]\nexport const SORTED_ACTIVE_LOCATION_OPTIONS = Object.entries(MII_LOCATIONS)\n  .filter(([key]) => key !== MiiLocation.VirtualAll && !INACTIVE_LOCATIONS.includes(key as MiiLocation))\n  .sort(([_aKey, aValue], [_bKey, bValue]) => aValue.city.localeCompare(bValue.city))\n  .map(([key, value]) => ({ label: value.display, value: key }))\n\nexport const countryOptions = (t) =>\n  Object.values(Countries).map((value) => ({\n    label: t(`countries.${value}`),\n    value,\n  }))\n\nconst defaultColumns = [\n  {\n    prop: 'createdAt',\n    header: 'dashboard.application',\n    sortable: true,\n    type: 'date',\n  },\n  {\n    prop: 'projectAbbreviation',\n    header: 'dashboard.projectAbbreviations',\n    sortable: true,\n    type: 'tag',\n  },\n  {\n    prop: 'ownerName',\n    header: 'general.applicant',\n    sortable: true,\n  },\n]\nexport const tableColumns = {\n  [PanelQuery.FdpgRequestedInWork]: [\n    ...defaultColumns,\n    {\n      prop: 'projectTitle',\n      header: 'dashboard.projectTitle',\n      sortable: true,\n    },\n    {\n      prop: 'computedDueDate',\n      header: 'dashboard.dueDate',\n      sortable: true,\n      type: 'dueDate',\n    },\n  ],\n  [PanelQuery.FdpgPendingInWork]: [\n    ...defaultColumns,\n    {\n      prop: 'vote',\n      header: 'dashboard.uacVote',\n    },\n    {\n      prop: 'data',\n      header: 'proposal.dataVolume',\n    },\n    {\n      prop: 'computedDueDate',\n      header: 'dashboard.dueDate',\n      sortable: true,\n      type: 'dueDate',\n    },\n  ],\n  [PanelQuery.FdpgOngoingInWork]: [\n    ...defaultColumns,\n    {\n      prop: 'projectTitle',\n      header: 'dashboard.projectTitle',\n      sortable: true,\n    },\n    {\n      prop: 'computedDueDate',\n      header: 'dashboard.dueDate',\n      sortable: true,\n      type: 'dueDate',\n    },\n  ],\n\n  [PanelQuery.FdpgFinished]: [\n    ...defaultColumns,\n    {\n      prop: 'projectTitle',\n      header: 'dashboard.projectTitle',\n      sortable: true,\n    },\n  ],\n}\n\nexport const PanelQueryObj = {\n  [Role.FdpgMember]: {\n    [CardType.Pending]: {\n      [ProjectFetchingType.TO_CHECK]: PanelQuery.FdpgPendingToCheck,\n      [ProjectFetchingType.IN_WORK]: PanelQuery.FdpgPendingInWork,\n    },\n    [CardType.Requested]: {\n      [ProjectFetchingType.TO_CHECK]: PanelQuery.FdpgRequestedToCheck,\n      [ProjectFetchingType.IN_WORK]: PanelQuery.FdpgRequestedInWork,\n    },\n    [CardType.Ongoing]: {\n      [ProjectFetchingType.TO_CHECK]: PanelQuery.FdpgOngoingToCheck,\n      [ProjectFetchingType.IN_WORK]: PanelQuery.FdpgOngoingInWork,\n    },\n    [CardType.Completed]: PanelQuery.FdpgFinished,\n  },\n\n  [Role.Researcher]: {\n    [CardType.Draft]: PanelQuery.Draft,\n    [CardType.Pending]: PanelQuery.ResearcherPending,\n    [CardType.Ongoing]: PanelQuery.ResearcherOngoing,\n    [CardType.Completed]: PanelQuery.ResearcherFinished,\n  },\n\n  [Role.UacMember]: {\n    [CardType.Pending]: PanelQuery.UacPending,\n    [CardType.Ongoing]: PanelQuery.UacOngoing,\n    [CardType.Completed]: PanelQuery.UacFinished,\n    [CardType.Requested]: PanelQuery.UacRequested,\n  },\n\n  [Role.DizMember]: {\n    [CardType.Pending]: PanelQuery.DizPending,\n    [CardType.Ongoing]: PanelQuery.DizOngoing,\n    [CardType.Completed]: PanelQuery.DizFinished,\n    [CardType.Requested]: PanelQuery.DizRequested,\n  },\n}\n","import { IDefinitionCard, IDefinitionSectionObject } from '@/components/Shared/definition-card.types'\nimport { IApplicant, IParticipant, IProposal } from '@/types/proposal.types'\nimport { MII_LOCATIONS } from '..'\n\nconst researcherCard: IDefinitionCard<IApplicant, 'researcher'> = {\n  key: 'researcher',\n  cardLabel: 'proposal.personalDetails',\n  terms: [\n    {\n      label: 'general.titleAndName',\n      size: 12,\n      definitions: [[{ key: 'title' }], [{ key: 'firstName' }, { key: 'lastName' }]],\n    },\n    {\n      label: 'proposal.belongingOptional',\n      size: 12,\n      definitions: [[{ key: 'affiliation' }]],\n    },\n    {\n      label: 'proposal.emailAddress',\n      size: 12,\n      definitions: [[{ key: 'email' }]],\n    },\n  ],\n}\n\nconst instituteCard: IDefinitionCard<IParticipant, 'institute'> = {\n  key: 'institute',\n  cardLabel: 'proposal.detailsOfTheInstitutionFacility',\n  terms: [\n    {\n      label: 'proposal.selectionOfMiiLocation',\n      size: 24,\n      definitions: [\n        [\n          {\n            key: 'miiLocation',\n            kind: 'lookup',\n            lookupMap: MII_LOCATIONS,\n            lookupKey: 'display',\n          },\n        ],\n      ],\n    },\n    {\n      label: 'proposal.fullCorrectNameOfTheInstitutionFacilityJurPerson',\n      size: 24,\n      hideIfOtherValueIsTruthy: 'miiLocation',\n      definitions: [[{ key: 'name' }]],\n    },\n    {\n      label: 'general.address',\n      size: 12,\n      hideIfOtherValueIsTruthy: 'miiLocation',\n      definitions: [\n        [{ key: 'streetAddress' }, { key: 'houseNumber' }],\n        [{ key: 'postalCode' }, { key: 'city' }],\n        [{ key: 'country', prefix: 'countries.', kind: 'translatable' }],\n      ],\n    },\n    {\n      label: 'proposal.emailAddress',\n      size: 12,\n      hideIfOtherValueIsTruthy: 'miiLocation',\n      definitions: [[{ key: 'email' }]],\n    },\n  ],\n}\n\nconst categoryCard: IDefinitionCard<IParticipant, 'participantCategory'> = {\n  key: 'participantCategory',\n  cardLabel: 'proposal.involvedCategory',\n  terms: [\n    {\n      label: 'proposal.involvedCategory',\n      size: 24,\n      definitions: [[{ key: 'category', prefix: 'proposal.participantCategory_', kind: 'translatable' }]],\n    },\n  ],\n}\n\nconst applicantCards = [researcherCard, instituteCard, categoryCard]\n\nexport const applicantSection: IDefinitionSectionObject<IProposal, 'applicant'> = {\n  sectionLabel: 'proposal.applicant',\n  kind: 'object',\n  key: 'applicant',\n  mapping: applicantCards,\n}\n","import {\n  IDefinitionCardArrayVirtual,\n  IDefinitionSectionObjectVirtual,\n  IVirtualWrap,\n} from '@/components/Shared/definition-card.types'\nimport { DataPrivacyTextsContentKeys } from '@/types/data-privacy.types'\n\nexport interface IDataPrivacyOverview {\n  data?: DataPrivacyTextsContentKeys[]\n}\n\nconst privacyByUsageCard: IDefinitionCardArrayVirtual<IVirtualWrap<IDataPrivacyOverview>, 'content', 'data'> = {\n  key: 'content',\n  cardLabel: 'proposal.typeOfUse_dataPrivacy',\n  loopOn: 'data',\n  terms: [\n    {\n      label: 'proposal.typeOfUse',\n      size: 24,\n      definitions: [[{ key: 'headline' }]],\n    },\n    {\n      label: 'proposal.dataPrivacy',\n      size: 24,\n      definitions: [[{ key: 'text' }]],\n    },\n  ],\n}\n\nexport const dataPrivacySection: IDefinitionSectionObjectVirtual<IVirtualWrap<IDataPrivacyOverview>, 'content'> = {\n  sectionLabel: 'proposal.dataPrivacy',\n  kind: 'object',\n  key: 'content',\n  mapping: [privacyByUsageCard],\n}\n","import {\n  IDefinitionCardArrayVirtual,\n  IDefinitionCardVirtual,\n  IDefinitionSectionObjectVirtual,\n  IVirtualWrap,\n} from '@/components/Shared/definition-card.types'\nimport { IUpload } from '@/types/proposal.types'\n\nexport interface IOverview {\n  ownerId: string\n  submittedAt: string\n  projectAbbreviation: string\n  proposalId: string\n  uploads?: IUpload[]\n}\n\nconst overviewProjectCard: IDefinitionCardVirtual<IVirtualWrap<IOverview>, 'content'> = {\n  kind: 'virtual',\n  key: 'content',\n  cardLabel: 'general.proposal',\n  terms: [\n    {\n      label: 'proposal.projectAbbreviation',\n      size: 12,\n      definitions: [[{ key: 'projectAbbreviation' }]],\n    },\n    {\n      label: 'proposal.submittedAt',\n      size: 12,\n      definitions: [[{ key: 'submittedAt', kind: 'date' }]],\n    },\n    {\n      label: 'proposal.proposalId',\n      size: 12,\n      definitions: [[{ key: 'proposalId' }]],\n    },\n    {\n      label: 'general.applicantId',\n      size: 12,\n      definitions: [[{ key: 'ownerId' }]],\n    },\n  ],\n}\n\nconst overviewAppendixCard: IDefinitionCardArrayVirtual<IVirtualWrap<IOverview>, 'content', 'uploads'> = {\n  key: 'content',\n  cardLabel: 'proposal.appendix',\n  loopOn: 'uploads',\n  terms: [\n    {\n      label: 'proposal.type',\n      size: 24,\n      definitions: [[{ key: 'type', kind: 'translatable', prefix: 'proposal.uploadType_' }]],\n    },\n    {\n      label: 'general.fileName',\n      size: 24,\n      definitions: [[{ key: 'fileName' }]],\n    },\n    {\n      label: 'proposal.appendixId',\n      size: 24,\n      definitions: [[{ key: '_id' }]],\n    },\n  ],\n}\n\nexport const overviewSection: IDefinitionSectionObjectVirtual<IVirtualWrap<IOverview>, 'content'> = {\n  sectionLabel: 'general.projectOverview',\n  kind: 'object',\n  key: 'content',\n  mapping: [overviewProjectCard, overviewAppendixCard],\n}\n","import { IDefinitionCard, IDefinitionSectionArray } from '@/components/Shared/definition-card.types'\nimport { IParticipant, IProposal } from '@/types/proposal.types'\nimport { MII_LOCATIONS } from '..'\n\nconst researcherCard: IDefinitionCard<IParticipant, 'researcher'> = {\n  key: 'researcher',\n  cardLabel: 'proposal.personalDetails',\n  terms: [\n    {\n      label: 'general.titleAndName',\n      size: 12,\n      definitions: [[{ key: 'title' }], [{ key: 'firstName' }, { key: 'lastName' }]],\n    },\n    {\n      label: 'proposal.belongingOptional',\n      size: 12,\n      definitions: [[{ key: 'affiliation' }]],\n    },\n    {\n      label: 'proposal.emailAddress',\n      size: 12,\n      definitions: [[{ key: 'email' }]],\n    },\n  ],\n}\n\nconst instituteCard: IDefinitionCard<IParticipant, 'institute'> = {\n  key: 'institute',\n  cardLabel: 'proposal.detailsOfTheInstitutionFacility',\n  terms: [\n    {\n      label: 'proposal.selectionOfMiiLocation',\n      size: 24,\n      hideIfThisValueIsFalsy: 'miiLocation',\n      definitions: [\n        [\n          {\n            key: 'miiLocation',\n            kind: 'lookup',\n            lookupMap: MII_LOCATIONS,\n            lookupKey: 'display',\n          },\n        ],\n      ],\n    },\n    {\n      label: 'proposal.fullCorrectNameOfTheInstitutionFacilityJurPerson',\n      size: 24,\n      hideIfOtherValueIsTruthy: 'miiLocation',\n      definitions: [[{ key: 'name' }]],\n    },\n    {\n      label: 'general.address',\n      size: 12,\n      hideIfOtherValueIsTruthy: 'miiLocation',\n      definitions: [\n        [{ key: 'streetAddress' }, { key: 'houseNumber' }],\n        [{ key: 'postalCode' }, { key: 'city' }],\n        [{ key: 'country', prefix: 'countries.', kind: 'translatable' }],\n      ],\n    },\n    {\n      label: 'proposal.emailAddress',\n      size: 12,\n      hideIfOtherValueIsTruthy: 'miiLocation',\n      definitions: [[{ key: 'email' }]],\n    },\n  ],\n}\n\nconst categoryCard: IDefinitionCard<IParticipant, 'participantCategory'> = {\n  key: 'participantCategory',\n  cardLabel: 'proposal.involvedCategory',\n  terms: [\n    {\n      label: 'proposal.involvedCategory',\n      size: 24,\n      definitions: [[{ key: 'category', prefix: 'proposal.participantCategory_', kind: 'translatable' }]],\n    },\n  ],\n}\n\nconst participantsCards = [researcherCard, instituteCard, categoryCard]\n\nexport const participantSection: IDefinitionSectionArray<IProposal, 'participants', 'researcher'> = {\n  sectionLabel: 'proposal.participatingScientists',\n  arrayLabel: [{ key: 'firstName' }, { key: 'lastName' }],\n  arrayLabelKey: 'researcher',\n  kind: 'array',\n  key: 'participants',\n  mapping: participantsCards,\n}\n","import { IDefinitionCard, IDefinitionSectionObject } from '@/components/Shared/definition-card.types'\nimport { IProjectResponsible, IProposal } from '@/types/proposal.types'\nimport { MII_LOCATIONS } from '..'\n\nconst projectResponsibilityCard: IDefinitionCard<IProjectResponsible, 'projectResponsibility'> = {\n  key: 'projectResponsibility',\n  cardLabel: 'proposal.personalDetails',\n  hideIfOtherValueIsTruthy: ['researcher', 'email'],\n  terms: [\n    {\n      label: 'proposal.applicantIsProjectResponsible',\n      size: 12,\n      definitions: [\n        [{ key: 'applicantIsProjectResponsible', kind: 'boolean', true: 'proposal.yes', false: 'proposal.no' }],\n      ],\n    },\n  ],\n}\n\nconst projectResponsibleCard: IDefinitionCard<IProjectResponsible, 'researcher'> = {\n  key: 'researcher',\n  cardLabel: 'proposal.personalDetails',\n  hideIfOtherValueIsTruthy: ['projectResponsibility', 'applicantIsProjectResponsible'],\n  terms: [\n    {\n      label: 'general.titleAndName',\n      size: 12,\n      definitions: [[{ key: 'title' }], [{ key: 'firstName' }, { key: 'lastName' }]],\n    },\n    {\n      label: 'proposal.belongingOptional',\n      size: 12,\n      definitions: [[{ key: 'affiliation' }]],\n    },\n    {\n      label: 'proposal.emailAddress',\n      size: 12,\n      definitions: [[{ key: 'email' }]],\n    },\n  ],\n}\n\nconst instituteCard: IDefinitionCard<IProjectResponsible, 'institute'> = {\n  key: 'institute',\n  cardLabel: 'proposal.detailsOfTheInstitutionFacility',\n  hideIfOtherValueIsTruthy: ['projectResponsibility', 'applicantIsProjectResponsible'],\n  terms: [\n    {\n      label: 'proposal.selectionOfMiiLocation',\n      size: 24,\n      hideIfThisValueIsFalsy: 'miiLocation',\n      definitions: [\n        [\n          {\n            key: 'miiLocation',\n            kind: 'lookup',\n            lookupMap: MII_LOCATIONS,\n            lookupKey: 'display',\n          },\n        ],\n      ],\n    },\n    {\n      label: 'proposal.fullCorrectNameOfTheInstitutionFacilityJurPerson',\n      size: 24,\n      hideIfOtherValueIsTruthy: 'miiLocation',\n      definitions: [[{ key: 'name' }]],\n    },\n    {\n      label: 'general.address',\n      size: 12,\n      hideIfOtherValueIsTruthy: 'miiLocation',\n      definitions: [\n        [{ key: 'streetAddress' }, { key: 'houseNumber' }],\n        [{ key: 'postalCode' }, { key: 'city' }],\n        [{ key: 'country', prefix: 'countries.', kind: 'translatable' }],\n      ],\n    },\n    {\n      label: 'proposal.emailAddress',\n      size: 12,\n      hideIfOtherValueIsTruthy: 'miiLocation',\n      definitions: [[{ key: 'email' }]],\n    },\n  ],\n}\n\nconst categoryCard: IDefinitionCard<IProjectResponsible, 'participantCategory'> = {\n  key: 'participantCategory',\n  cardLabel: 'proposal.involvedCategory',\n  hideIfOtherValueIsTruthy: ['projectResponsibility', 'applicantIsProjectResponsible'],\n  terms: [\n    {\n      label: 'proposal.involvedCategory',\n      size: 24,\n      definitions: [[{ key: 'category', prefix: 'proposal.participantCategory_', kind: 'translatable' }]],\n    },\n  ],\n}\n\nconst projectResponsibilityCards = [projectResponsibilityCard, projectResponsibleCard, instituteCard, categoryCard]\n\nexport const projectResponsibilitySection: IDefinitionSectionObject<IProposal, 'projectResponsible'> = {\n  sectionLabel: 'proposal.projectResponsible',\n  kind: 'object',\n  key: 'projectResponsible',\n  mapping: projectResponsibilityCards,\n}\n","import { IDefinitionCard, IDefinitionSectionSingle } from '@/components/Shared/definition-card.types'\nimport { IProposal } from '@/types/proposal.types'\n\nconst projectUserCard: IDefinitionCard<IProposal, 'projectUser'> = {\n  key: 'projectUser',\n  cardLabel: null,\n  terms: [\n    {\n      label: 'proposal.projectUser',\n      size: 24,\n      definitions: [[{ key: 'projectUserType', prefix: 'proposal.projectUserType_', kind: 'translatable' }]],\n    },\n  ],\n}\n\nexport const projectUserSection: IDefinitionSectionSingle<IProposal, 'projectUser'> = {\n  sectionLabel: 'proposal.projectUser',\n  kind: 'single',\n  key: 'projectUser',\n  card: projectUserCard,\n}\n","import { IDefinitionCard, IDefinitionSectionSingle } from '@/components/Shared/definition-card.types'\nimport { IProposal } from '@/types/proposal.types'\n\nconst requestedDataCard: IDefinitionCard<IProposal, 'requestedData'> = {\n  key: 'requestedData',\n  cardLabel: null,\n  terms: [\n    {\n      label: 'proposal.patientInfo',\n      size: 24,\n      definitions: [[{ key: 'patientInfo' }]],\n    },\n    {\n      label: 'proposal.informationOnDataSelection',\n      size: 24,\n      definitions: [[{ key: 'dataInfo' }]],\n    },\n    {\n      label: 'proposal.informationOnDesiredDataAmount',\n      size: 24,\n      definitions: [[{ key: 'desiredDataAmount' }]],\n    },\n  ],\n}\n\nexport const requestedDataSection: IDefinitionSectionSingle<IProposal, 'requestedData'> = {\n  sectionLabel: 'proposal.informationOnTheRequestedData',\n  kind: 'single',\n  key: 'requestedData',\n  card: requestedDataCard,\n}\n","import {\n  IDefinitionCard,\n  IDefinitionCardArray,\n  IDefinitionSectionObject,\n} from '@/components/Shared/definition-card.types'\nimport { MII_LOCATIONS } from '@/constants'\nimport { IUserProject, IProposal } from '@/types/proposal.types'\n\nconst generalProjectInformationCard: IDefinitionCard<IUserProject, 'generalProjectInformation'> = {\n  key: 'generalProjectInformation',\n  cardLabel: 'proposal.generalProjectInformation',\n  terms: [\n    {\n      label: 'proposal.projectTitle',\n      size: 24,\n      definitions: [[{ key: 'projectTitle' }]],\n    },\n    {\n      label: 'proposal.desiredStartTime',\n      size: 12,\n      definitions: [[{ key: 'desiredStartTime', kind: 'date' }]],\n    },\n    {\n      label: 'proposal.projectDuration',\n      size: 12,\n      definitions: [[{ key: 'projectDuration' }]],\n    },\n    {\n      label: 'proposal.projectFunding',\n      size: 12,\n      definitions: [[{ key: 'projectFunding' }]],\n    },\n    {\n      label: 'proposal.fundingReferenceNumber',\n      size: 12,\n      definitions: [[{ key: 'fundingReferenceNumber' }]],\n    },\n  ],\n}\n\nconst feasibilityCard: IDefinitionCard<IUserProject, 'feasibility'> = {\n  key: 'feasibility',\n  cardLabel: 'proposal.feasibility',\n  terms: [\n    {\n      label: 'proposal.feasibilityId',\n      size: 24,\n      definitions: [[{ key: 'id' }]],\n    },\n    {\n      label: 'proposal.assessmentOfFeasibilityDetails',\n      size: 24,\n      definitions: [[{ key: 'details' }]],\n    },\n  ],\n}\n\nconst projectDetailsCard: IDefinitionCard<IUserProject, 'projectDetails'> = {\n  key: 'projectDetails',\n  cardLabel: 'proposal.projectDetails',\n  terms: [\n    {\n      label: 'proposal.simpleProjectDescription',\n      size: 24,\n      definitions: [[{ key: 'simpleProjectDescription' }]],\n    },\n    {\n      label: 'proposal.department',\n      size: 24,\n      definitions: [[{ key: 'department', prefix: 'departments.', kind: 'translatable', isList: true }]],\n    },\n    {\n      label: 'proposal.hypothesisAndQuestionProjectGoals',\n      size: 24,\n      definitions: [[{ key: 'hypothesisAndQuestionProjectGoals' }]],\n    },\n    {\n      label: 'proposal.scientificBackground',\n      size: 24,\n      definitions: [[{ key: 'scientificBackground' }]],\n    },\n    {\n      label: 'proposal.materialAndMethods',\n      size: 24,\n      definitions: [[{ key: 'materialAndMethods' }]],\n    },\n  ],\n}\n\nconst ethicVoteCard: IDefinitionCard<IUserProject, 'ethicVote'> = {\n  key: 'ethicVote',\n  cardLabel: 'proposal.ethicsVote',\n  terms: [\n    {\n      label: 'proposal.ethicVoteExistingLabel',\n      size: 24,\n      definitions: [[{ key: 'isExisting', kind: 'boolean', true: 'proposal.present', false: 'proposal.notRequired' }]],\n    },\n    {\n      label: 'proposal.ethicsCommittee',\n      size: 24,\n      definitions: [[{ key: 'ethicsCommittee' }]],\n      hideIfThisValueIsFalsy: 'isExisting',\n    },\n    {\n      label: 'proposal.ethicsVoteNumber',\n      size: 12,\n      definitions: [[{ key: 'ethicsVoteNumber' }]],\n      hideIfThisValueIsFalsy: 'isExisting',\n    },\n    {\n      label: 'proposal.voteFromDate',\n      size: 12,\n      definitions: [[{ key: 'voteFromDate', kind: 'date' }]],\n      hideIfThisValueIsFalsy: 'isExisting',\n    },\n    {\n      label: 'proposal.admitReputationOfAttachment',\n      size: 24,\n      definitions: [\n        [{ key: 'admitReputationOfAttachment', kind: 'boolean', true: 'proposal.yes', false: 'proposal.no' }],\n      ],\n      hideIfThisValueIsFalsy: 'isExisting',\n    },\n  ],\n}\n\nconst recontactCard: IDefinitionCard<IUserProject, 'resourceAndRecontact'> = {\n  key: 'resourceAndRecontact',\n  cardLabel: 'proposal.projectResourcesAndRecontact',\n  terms: [\n    {\n      label: 'proposal.areSufficientProfessionalAndFinancialResourcesAvailable',\n      size: 24,\n      definitions: [[{ key: 'hasEnoughResources', kind: 'boolean', true: 'proposal.yes', false: 'proposal.no' }]],\n    },\n    {\n      label: 'proposal.additionalDataCollection',\n      size: 24,\n      definitions: [[{ key: 'isRecontactingIntended', kind: 'boolean', true: 'proposal.yes', false: 'proposal.no' }]],\n    },\n  ],\n}\n\nconst propertyRightsCard: IDefinitionCard<IUserProject, 'propertyRights'> = {\n  key: 'propertyRights',\n  cardLabel: 'proposal.propertyRights',\n  terms: [\n    {\n      label: 'proposal.intellectualPropertyRightCreationApplicationOptions',\n      size: 24,\n      definitions: [[{ key: 'options' }]],\n    },\n  ],\n}\n\nconst plannedPublicationCardEmpty: IDefinitionCard<IUserProject, 'plannedPublication'> = {\n  key: 'plannedPublication',\n  cardLabel: 'proposal.plannedPublications',\n  hideIfOtherValueIsTruthy: ['plannedPublication', 'publications'],\n  terms: [\n    {\n      label: 'proposal.noPublicationIsPlanned',\n      size: 24,\n      definitions: [[{ key: 'noPublicationPlanned', kind: 'boolean', true: 'proposal.yes', false: 'proposal.no' }]],\n    },\n  ],\n}\n\nconst plannedPublicationCard: IDefinitionCardArray<IUserProject, 'plannedPublication', 'publications'> = {\n  key: 'plannedPublication',\n  cardLabel: 'proposal.plannedPublications',\n  loopOn: 'publications',\n  hideIfOtherValueIsTruthy: ['plannedPublication', 'noPublicationPlanned'],\n  terms: [\n    {\n      label: 'proposal.type',\n      size: 24,\n      definitions: [[{ key: 'type', prefix: 'proposal.publicationType_', kind: 'translatable' }]],\n    },\n    {\n      label: 'proposal.description',\n      size: 24,\n      definitions: [[{ key: 'description' }]],\n    },\n    {\n      label: 'proposal.authors',\n      size: 24,\n      definitions: [[{ key: 'authors' }]],\n    },\n  ],\n}\n\nconst addresseesCard: IDefinitionCard<IUserProject, 'addressees', typeof MII_LOCATIONS> = {\n  key: 'addressees',\n  cardLabel: 'proposal.addressees',\n  terms: [\n    {\n      label: 'proposal.desiredLocations',\n      size: 24,\n      definitions: [\n        [{ key: 'desiredLocations', isList: true, kind: 'lookup', lookupMap: MII_LOCATIONS, lookupKey: 'display' }],\n      ],\n    },\n  ],\n}\n\nconst typeOfUseCard: IDefinitionCard<IUserProject, 'typeOfUse'> = {\n  key: 'typeOfUse',\n  cardLabel: 'proposal.typeOfUse',\n  terms: [\n    {\n      label: 'proposal.typeOfUse',\n      size: 24,\n      definitions: [[{ key: 'usage', isList: true, prefix: 'proposal.typeOfUse_', kind: 'translatable' }]],\n    },\n  ],\n}\n\nconst biosamplesCard: IDefinitionCardArray<IUserProject, 'informationOnRequestedBioSamples', 'biosamples'> = {\n  key: 'informationOnRequestedBioSamples',\n  cardLabel: 'proposal.informationOnRequestedBioSamples',\n  loopOn: 'biosamples',\n  terms: [\n    {\n      label: 'proposal.biosampleType',\n      size: 24,\n      definitions: [[{ key: 'type' }]],\n    },\n    {\n      label: 'proposal.biosampleCount',\n      size: 24,\n      definitions: [[{ key: 'count' }]],\n    },\n    {\n      label: 'proposal.biosampleParameter',\n      size: 24,\n      definitions: [[{ key: 'parameter' }]],\n    },\n    {\n      label: 'proposal.biosampleLaboratoryResources',\n      size: 24,\n      definitions: [[{ key: 'laboratoryResources' }]],\n    },\n    {\n      label: 'proposal.biosampleMaterialRequirements',\n      size: 24,\n      definitions: [[{ key: 'requirements' }]],\n    },\n  ],\n}\n\nconst userProjectCards = [\n  generalProjectInformationCard,\n  feasibilityCard,\n  projectDetailsCard,\n  ethicVoteCard,\n  recontactCard,\n  propertyRightsCard,\n  plannedPublicationCardEmpty,\n  plannedPublicationCard,\n  addresseesCard,\n  typeOfUseCard,\n  biosamplesCard,\n]\n\nexport const userProjectSection: IDefinitionSectionObject<IProposal, 'userProject'> = {\n  sectionLabel: 'proposal.informationAboutTheUserProject',\n  kind: 'object',\n  key: 'userProject',\n  mapping: userProjectCards,\n}\n","export const getDateDiff = (date: string, subtractDays = 7) => {\n  // TODO: Check if everything works with timezones\n  const prevDate = new Date(new Date(date).toDateString()).getTime()\n  const currentDate = new Date(new Date().toDateString()).getTime()\n  const diffTime = prevDate - currentDate\n  return Math.floor(diffTime / (1000 * 60 * 60 * 24)) - subtractDays\n}\n\nexport const getLocaleDateString = (value?: string | Date, locale: string = 'de-DE') => {\n  if (!value) {\n    return ''\n  }\n\n  const valueAsDate = value instanceof Date ? value : new Date(value)\n\n  return valueAsDate.toLocaleDateString(locale, {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  })\n}\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, unref as _unref } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\" - \")\n\nimport { Definitions } from '@/components/Shared/definition-card.types'\nimport { PropType } from 'vue'\nimport { getLocaleDateString } from '@/utils/date.util'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  props: {\n  value: {\n    type: [String, Boolean, Number],\n    required: true,\n  },\n  definition: {\n    type: Object as PropType<Definitions<any, any>>,\n    required: true,\n  },\n},\n  setup(__props) {\n\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (__props.value === undefined)\n    ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n        _hoisted_1\n      ], 64))\n    : (__props.definition.kind === 'translatable')\n      ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n          _createTextVNode(_toDisplayString(_ctx.$t(`${__props.definition.prefix}${__props.value}`)), 1)\n        ], 64))\n      : (__props.definition.kind === 'date')\n        ? (_openBlock(), _createElementBlock(_Fragment, { key: 2 }, [\n            _createTextVNode(_toDisplayString(_unref(getLocaleDateString)(__props.value as string | Date)), 1)\n          ], 64))\n        : (__props.definition.kind === 'boolean')\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 3 }, [\n              _createTextVNode(_toDisplayString(_ctx.$t(`${__props.definition[__props.value as string]}`)), 1)\n            ], 64))\n          : (__props.definition.kind === 'lookup')\n            ? (_openBlock(), _createElementBlock(_Fragment, { key: 4 }, [\n                _createTextVNode(_toDisplayString(__props.definition.lookupMap[__props.value as string][__props.definition.lookupKey]), 1)\n              ], 64))\n            : (_openBlock(), _createElementBlock(_Fragment, { key: 5 }, [\n                _createTextVNode(_toDisplayString(__props.value), 1)\n              ], 64))\n}\n}\n\n})","import script from \"./DefinitionCardItem.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DefinitionCardItem.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./DefinitionCard.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DefinitionCard.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./DefinitionCard.vue?vue&type=style&index=0&id=70ad561d&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/lars/projects/fdpg/repos/fdpg-webapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-70ad561d\"]])\n\nexport default __exports__","import script from \"./PrintCard.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./PrintCard.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./PrintCard.vue?vue&type=style&index=0&id=12196288&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const transformEmptyStringToUndefined = (value?: string | Date): string | undefined => {\n  if (value) {\n    let trimmed: string\n\n    if (typeof (value as Date).toISOString === 'function') {\n      trimmed = (value as Date).toISOString()\n    } else {\n      trimmed = (value as string).trim()\n    }\n    return trimmed.length > 0 ? trimmed : undefined\n  }\n\n  return undefined\n}\n\nexport const hasNoContent = (value: any & { _id: string; isDone: boolean }): boolean => {\n  const existingValues = Object.entries(value).filter((entry) => {\n    return (\n      entry[1] !== null /** if the value is not existing */ &&\n      entry[1] !== undefined /** if the value is not existing */ &&\n      entry[0] !== '_id' /** if the key is not a helper */ &&\n      entry[0] !== 'isDone' /** if the value is not a helper */\n    )\n  })\n\n  return existingValues.length <= 0\n}\n","import { DeepPartial } from '@/types/deep-partial.type'\nimport { Countries } from '@/types/location.enum'\nimport { IFdpgOidcProfile } from '@/types/oidc.types'\nimport {\n  IApplicant,\n  IInstitute,\n  IParticipant,\n  IParticipantCategory,\n  IProjectResponsibility,\n  IProjectResponsible,\n  IProjectUser,\n  IResearcher,\n  ParticipantType,\n} from '@/types/proposal.types'\nimport { hasNoContent, transformEmptyStringToUndefined } from '../empty-string.util'\nconst NEW_ID = 'NEW_ID'\n\nconst transformParticipantResearcher = (\n  researcher?: Partial<IResearcher>,\n  fdpgUser?: IFdpgOidcProfile,\n): Partial<IResearcher> => {\n  return {\n    _id: researcher?._id,\n    isDone: researcher?.isDone ?? false,\n    title: transformEmptyStringToUndefined(fdpgUser?.title ?? researcher?.title),\n    firstName: transformEmptyStringToUndefined(fdpgUser?.given_name ?? researcher?.firstName),\n    lastName: transformEmptyStringToUndefined(fdpgUser?.family_name ?? researcher?.lastName),\n    affiliation: transformEmptyStringToUndefined(fdpgUser?.affiliation ?? researcher?.affiliation),\n    email: transformEmptyStringToUndefined(fdpgUser?.email ?? researcher?.email),\n  }\n}\n\nconst transformParticipantInstitute = (\n  institute?: Partial<IInstitute>,\n  fdpgUser?: IFdpgOidcProfile,\n): Partial<IInstitute> => {\n  let miiLocation = institute?.miiLocation\n\n  if (fdpgUser && 'MII_LOCATION' in fdpgUser) {\n    miiLocation = fdpgUser.MII_LOCATION\n  } else if (fdpgUser && 'organization' in fdpgUser) {\n    const country = Object.values(Countries).includes(fdpgUser.organization.country as Countries)\n      ? (fdpgUser.organization.country as Countries)\n      : undefined\n    return {\n      _id: institute?._id,\n      isDone: institute?.isDone ?? false,\n      miiLocation: undefined,\n      name: transformEmptyStringToUndefined(fdpgUser.organization.name),\n      streetAddress: transformEmptyStringToUndefined(fdpgUser.organization.street),\n      postalCode: transformEmptyStringToUndefined(fdpgUser.organization.postalCode),\n      city: transformEmptyStringToUndefined(fdpgUser.organization.city),\n      email: transformEmptyStringToUndefined(fdpgUser.organization.email),\n      country: country,\n      houseNumber: transformEmptyStringToUndefined(fdpgUser.organization?.houseNumber),\n    }\n  }\n\n  if (miiLocation) {\n    return {\n      _id: institute?._id,\n      isDone: institute?.isDone ?? false,\n      miiLocation,\n      name: undefined,\n      streetAddress: undefined,\n      postalCode: undefined,\n      city: undefined,\n      email: undefined,\n      country: undefined,\n      houseNumber: undefined,\n    }\n  }\n\n  return {\n    _id: institute?._id,\n    isDone: institute?.isDone ?? false,\n    miiLocation,\n    name: transformEmptyStringToUndefined(institute?.name),\n    streetAddress: transformEmptyStringToUndefined(institute?.streetAddress),\n    postalCode: transformEmptyStringToUndefined(institute?.postalCode),\n    city: transformEmptyStringToUndefined(institute?.city),\n    email: transformEmptyStringToUndefined(institute?.email),\n    country: institute?.country ?? Countries.DE,\n    houseNumber: transformEmptyStringToUndefined(institute?.houseNumber),\n  }\n}\n\nconst transformParticipantCategory = (\n  participantCategory?: DeepPartial<IParticipantCategory>,\n): Partial<IParticipantCategory> => {\n  return {\n    _id: participantCategory?._id,\n    isDone: participantCategory?.isDone ?? false,\n    category: participantCategory?.category,\n  }\n}\n\nexport const transformProjectUser = (projectUser?: DeepPartial<IProjectUser>): Partial<IProjectUser> => {\n  return {\n    _id: projectUser?._id,\n    isDone: projectUser?.isDone ?? false,\n    projectUserType: projectUser?.projectUserType,\n  }\n}\n\nexport const transformApplicant = (\n  applicant?: DeepPartial<IApplicant>,\n  fdpgUser?: IFdpgOidcProfile,\n): DeepPartial<IApplicant> => {\n  return {\n    researcher: transformParticipantResearcher(applicant?.researcher, fdpgUser),\n    institute: transformParticipantInstitute(applicant?.institute, fdpgUser),\n    participantCategory: transformParticipantCategory(applicant?.participantCategory),\n  }\n}\n\nconst transFormProjectResponsibility = (projectResponsibility?: DeepPartial<IProjectResponsibility>) => {\n  return {\n    _id: projectResponsibility?._id,\n    isDone: projectResponsibility?.isDone ?? false,\n    applicantIsProjectResponsible: projectResponsibility?.applicantIsProjectResponsible ?? false,\n  }\n}\nexport const transformProjectResponsible = (\n  projectResponsible?: DeepPartial<IProjectResponsible>,\n  transformToApi?: boolean,\n): DeepPartial<IProjectResponsible> => {\n  const applicantIsProjectResponsible = projectResponsible?.projectResponsibility?.applicantIsProjectResponsible\n  return {\n    researcher:\n      transformToApi && applicantIsProjectResponsible\n        ? undefined\n        : transformParticipantResearcher(applicantIsProjectResponsible ? undefined : projectResponsible?.researcher),\n    institute:\n      transformToApi && applicantIsProjectResponsible\n        ? undefined\n        : transformParticipantInstitute(applicantIsProjectResponsible ? undefined : projectResponsible?.institute),\n    participantCategory:\n      transformToApi && applicantIsProjectResponsible\n        ? undefined\n        : transformParticipantCategory(\n            applicantIsProjectResponsible ? undefined : projectResponsible?.participantCategory,\n          ),\n    projectResponsibility: transFormProjectResponsibility(projectResponsible?.projectResponsibility),\n  }\n}\n\nexport const mapParticipant = (participant?: DeepPartial<IParticipant>): DeepPartial<IParticipant> => {\n  return {\n    _id: participant?._id ?? NEW_ID,\n    researcher: transformParticipantResearcher(participant?.researcher),\n    institute: transformParticipantInstitute(participant?.institute),\n    participantCategory: transformParticipantCategory(participant?.participantCategory),\n  }\n}\nexport const transformParticipants = (participants?: DeepPartial<IParticipant[]>): DeepPartial<IParticipant[]> => {\n  if (participants) {\n    const filteredParticipants = participants\n      ?.map((participant) => mapParticipant(participant))\n      .filter((participant) => {\n        return !(\n          hasNoContent(participant.institute) &&\n          hasNoContent(participant.participantCategory) &&\n          hasNoContent(participant.researcher)\n        )\n      })\n    const isEmpty = filteredParticipants.length <= 0\n    if (!isEmpty) {\n      return filteredParticipants\n    }\n  }\n\n  return []\n}\n","import { DeepPartial } from '@/types/deep-partial.type'\nimport { MiiLocation } from '@/types/location.enum'\nimport {\n  IAddressees,\n  IBiosample,\n  IEthicVote,\n  IFeasibility,\n  IGeneralProjectInformation,\n  IInformationOnRequestedBioSamples,\n  IPlannedPublication,\n  IProjectDetails,\n  IPropertyRights,\n  IPublication,\n  IResourceAndRecontact,\n  ITypeOfUse,\n  IUserProject,\n  ProposalTypeOfUse,\n} from '@/types/proposal.types'\nimport { hasNoContent, transformEmptyStringToUndefined } from '../empty-string.util'\nconst NEW_ID = 'NEW_ID'\n\nconst transformProjectDetails = (projectDetails?: DeepPartial<IProjectDetails>): DeepPartial<IProjectDetails> => {\n  return {\n    _id: projectDetails?._id,\n    isDone: projectDetails?.isDone ?? false,\n    simpleProjectDescription: transformEmptyStringToUndefined(projectDetails?.simpleProjectDescription),\n    department: projectDetails?.department ?? [],\n    scientificBackground: transformEmptyStringToUndefined(projectDetails?.scientificBackground),\n    hypothesisAndQuestionProjectGoals: transformEmptyStringToUndefined(\n      projectDetails?.hypothesisAndQuestionProjectGoals,\n    ),\n    materialAndMethods: transformEmptyStringToUndefined(projectDetails?.materialAndMethods),\n  }\n}\n\nexport const transformEthicVote = (ethicVote?: DeepPartial<IEthicVote>): DeepPartial<IEthicVote> => {\n  return {\n    _id: ethicVote?._id,\n    isDone: ethicVote?.isDone ?? false,\n    isExisting: ethicVote?.isExisting ?? true,\n    ethicsCommittee: transformEmptyStringToUndefined(ethicVote?.ethicsCommittee),\n    ethicsVoteNumber: transformEmptyStringToUndefined(ethicVote?.ethicsVoteNumber),\n    voteFromDate: transformEmptyStringToUndefined(ethicVote?.voteFromDate),\n    admitReputationOfAttachment: ethicVote?.admitReputationOfAttachment,\n  }\n}\n\nconst transformFeasibility = (feasibility?: DeepPartial<IFeasibility>): DeepPartial<IFeasibility> => {\n  return {\n    _id: feasibility?._id,\n    isDone: feasibility?.isDone ?? false,\n    id: feasibility?.id,\n    details: transformEmptyStringToUndefined(feasibility?.details),\n  }\n}\n\nconst transformGeneralProjectInformation = (\n  generalProjectInformation?: DeepPartial<IGeneralProjectInformation>,\n): DeepPartial<IGeneralProjectInformation> => {\n  return {\n    _id: generalProjectInformation?._id,\n    isDone: generalProjectInformation?.isDone ?? false,\n    projectTitle: transformEmptyStringToUndefined(generalProjectInformation?.projectTitle),\n    desiredStartTime: transformEmptyStringToUndefined(generalProjectInformation?.desiredStartTime),\n    projectDuration: generalProjectInformation?.projectDuration,\n    projectFunding: transformEmptyStringToUndefined(generalProjectInformation?.projectFunding),\n    fundingReferenceNumber: transformEmptyStringToUndefined(generalProjectInformation?.fundingReferenceNumber),\n  }\n}\n\nconst transformResourceAndRecontact = (\n  resourceAndRecontact?: DeepPartial<IResourceAndRecontact>,\n): DeepPartial<IResourceAndRecontact> => {\n  return {\n    _id: resourceAndRecontact?._id,\n    isDone: resourceAndRecontact?.isDone ?? false,\n    hasEnoughResources: resourceAndRecontact?.hasEnoughResources ?? false,\n    isRecontactingIntended: resourceAndRecontact?.isRecontactingIntended ?? false,\n  }\n}\nconst transformPropertyRights = (propertyRights?: DeepPartial<IPropertyRights>): DeepPartial<IPropertyRights> => {\n  return {\n    _id: propertyRights?._id,\n    isDone: propertyRights?.isDone ?? false,\n    options: transformEmptyStringToUndefined(propertyRights?.options),\n  }\n}\nconst transformPlannedPublication = (\n  plannedPublication?: DeepPartial<IPlannedPublication>,\n  transformToApi?: boolean,\n): DeepPartial<IPlannedPublication> => {\n  return {\n    _id: plannedPublication?._id,\n    isDone: plannedPublication?.isDone ?? false,\n    noPublicationPlanned: plannedPublication?.noPublicationPlanned ?? false,\n    publications: transformPublications(\n      plannedPublication?.publications,\n      transformToApi,\n      plannedPublication?.noPublicationPlanned,\n    ),\n  }\n}\n\nexport const mapPublication = (publication?: Partial<IPublication>): Partial<IPublication> => ({\n  _id: publication?._id ?? NEW_ID,\n  type: publication?.type,\n  description: transformEmptyStringToUndefined(publication?.description),\n  authors: transformEmptyStringToUndefined(publication?.authors),\n})\n\nconst transformPublications = (\n  publications?: DeepPartial<IPublication[]>,\n  transformToApi?: boolean,\n  noPublicationPlanned?: boolean,\n): DeepPartial<IPublication[]> | undefined => {\n  if (publications) {\n    const filteredPublications = publications\n      .map((publication) => mapPublication(publication))\n      .filter((publication) => !hasNoContent(publication))\n\n    const isEmpty = filteredPublications.length <= 0\n    if (!isEmpty) {\n      return filteredPublications\n    }\n  }\n\n  // If it's empty we don't need to create it in the api, but we like to have an empty version for the ui\n  // But if noPublicationPlanned value is true we need to prevent publications.length as a truthy value to prevent showing it in review page\n  return transformToApi ? undefined : noPublicationPlanned ? [] : [mapPublication()]\n}\n\nconst transformAddressees = (addressees?: DeepPartial<IAddressees>): DeepPartial<IAddressees> => {\n  return {\n    _id: addressees?._id,\n    isDone: addressees?.isDone ?? false,\n    desiredLocations: addressees?.desiredLocations ?? (addressees?._id ? [] : [MiiLocation.VirtualAll]),\n  }\n}\nconst transformTypeOfUse = (typeOfUse?: DeepPartial<ITypeOfUse>): DeepPartial<ITypeOfUse> => {\n  return {\n    _id: typeOfUse?._id,\n    isDone: typeOfUse?.isDone ?? false,\n    usage: typeOfUse?.usage ?? [],\n    dataPrivacyExtra: transformEmptyStringToUndefined(typeOfUse?.dataPrivacyExtra),\n  }\n}\n\nconst transformInformationOnRequestedBioSamples = (\n  informationOnRequestedBioSamples?: DeepPartial<IInformationOnRequestedBioSamples>,\n  typeOfUse?: DeepPartial<ITypeOfUse>,\n  transformToApi?: boolean,\n): DeepPartial<IInformationOnRequestedBioSamples> | undefined => {\n  return typeOfUse?.usage?.includes(ProposalTypeOfUse.Biosample)\n    ? {\n        _id: informationOnRequestedBioSamples?._id,\n        isDone: informationOnRequestedBioSamples?.isDone ?? false,\n        biosamples: transformBiosamples(informationOnRequestedBioSamples?.biosamples, transformToApi),\n      }\n    : undefined\n}\n\nexport const mapBiosample = (biosample?: Partial<IBiosample>): Partial<IBiosample> => {\n  return {\n    _id: biosample?._id ?? NEW_ID,\n    type: transformEmptyStringToUndefined(biosample?.type),\n    parameter: transformEmptyStringToUndefined(biosample?.parameter),\n    laboratoryResources: transformEmptyStringToUndefined(biosample?.laboratoryResources),\n    requirements: transformEmptyStringToUndefined(biosample?.requirements),\n    count: transformEmptyStringToUndefined(biosample?.count),\n  }\n}\nexport const transformBiosamples = (\n  biosamples?: DeepPartial<IBiosample[]>,\n  transformToApi?: boolean,\n): DeepPartial<IBiosample[]> | undefined => {\n  if (biosamples) {\n    const filteredBiosamples = biosamples\n      .map((biosample) => mapBiosample(biosample))\n      .filter((biosample) => !hasNoContent(biosample))\n\n    const isEmpty = filteredBiosamples.length <= 0\n    if (!isEmpty) {\n      return filteredBiosamples\n    }\n  }\n\n  // If it's empty we don't need to create it in the api, but we like to have an empty version for the ui\n  return transformToApi ? undefined : [mapBiosample()]\n}\n\nexport const transformUserProject = (\n  userProject?: DeepPartial<IUserProject>,\n  transformToApi?: boolean,\n): DeepPartial<IUserProject> => {\n  return {\n    generalProjectInformation: transformGeneralProjectInformation(userProject?.generalProjectInformation),\n    feasibility: transformFeasibility(userProject?.feasibility),\n    projectDetails: transformProjectDetails(userProject?.projectDetails),\n    ethicVote: transformEthicVote(userProject?.ethicVote),\n    resourceAndRecontact: transformResourceAndRecontact(userProject?.resourceAndRecontact),\n    propertyRights: transformPropertyRights(userProject?.propertyRights),\n    plannedPublication: transformPlannedPublication(userProject?.plannedPublication, transformToApi),\n    addressees: transformAddressees(userProject?.addressees),\n    typeOfUse: transformTypeOfUse(userProject?.typeOfUse),\n    informationOnRequestedBioSamples: transformInformationOnRequestedBioSamples(\n      userProject?.informationOnRequestedBioSamples,\n      userProject?.typeOfUse,\n      transformToApi,\n    ),\n  }\n}\n","import { DeepPartial } from '@/types/deep-partial.type'\nimport { IFdpgOidcProfile } from '@/types/oidc.types'\nimport { IOwner, IProposal, IRequestedData } from '@/types/proposal.types'\nimport { IVersion } from '@/types/version.interface'\nimport { transformEmptyStringToUndefined } from '../empty-string.util'\nimport {\n  transformApplicant,\n  transformParticipants,\n  transformProjectResponsible,\n  transformProjectUser,\n} from './participant-applicant-transform.util'\nimport { transformUserProject } from './transform-user-project.util'\n\nconst transformRequestedData = (requestedData?: DeepPartial<IRequestedData>): DeepPartial<IRequestedData> => {\n  return {\n    _id: requestedData?._id,\n    isDone: requestedData?.isDone ?? false,\n    patientInfo: transformEmptyStringToUndefined(requestedData?.patientInfo),\n    dataInfo: transformEmptyStringToUndefined(requestedData?.dataInfo),\n    desiredDataAmount: requestedData?.desiredDataAmount,\n  }\n}\n\nconst transformVersion = (version?: DeepPartial<IVersion>): DeepPartial<IVersion> => {\n  return {\n    mayor: version?.mayor ?? 0,\n    minor: version?.minor ?? 1,\n  }\n}\n\nconst transformOwner = (owner?: DeepPartial<IOwner>): DeepPartial<IOwner> => {\n  return {\n    id: owner?.id,\n    firstName: owner?.firstName,\n    lastName: owner?.lastName,\n    email: owner?.email,\n    username: owner?.username,\n    miiLocation: owner?.miiLocation,\n    role: owner?.role,\n  }\n}\n\nexport const transformForm = (\n  form?: DeepPartial<IProposal>,\n  transformToApi?: boolean,\n  fdpgUser?: IFdpgOidcProfile,\n): DeepPartial<IProposal> => {\n  return {\n    _id: form?._id,\n    projectAbbreviation: form?.projectAbbreviation,\n    participants: transformParticipants(form?.participants),\n    applicant: transformApplicant(form?.applicant, fdpgUser),\n    projectResponsible: transformProjectResponsible(form?.projectResponsible, transformToApi),\n    projectUser: transformProjectUser(form?.projectUser),\n    userProject: transformUserProject(form?.userProject, transformToApi),\n    requestedData: transformRequestedData(form?.requestedData),\n    uploads: form?.uploads,\n    isLocked: form?.isLocked,\n    status: form?.status,\n    locationStatus: form?.locationStatus,\n    createdAt: form?.createdAt,\n    submittedAt: form?.submittedAt,\n    updatedAt: form?.updatedAt,\n    dueDateForStatus: form?.dueDateForStatus,\n    history: form?.history ?? [],\n    numberOfRequestedLocations: form?.numberOfRequestedLocations,\n    numberOfApprovedLocations: form?.numberOfApprovedLocations,\n    numberOfSignedLocations: form?.numberOfSignedLocations,\n    contractAcceptedByResearcher: form?.contractAcceptedByResearcher,\n    contractRejectedByResearcher: form?.contractRejectedByResearcher,\n    contractRejectedByResearcherReason: form?.contractRejectedByResearcherReason,\n    researcherSignedAt: form?.researcherSignedAt,\n    owner: transformOwner(form?.owner),\n    ownerId: form?.ownerId,\n    ownerName: form?.ownerName,\n    publications: form?.publications ?? [],\n    fdpgChecklist: form?.fdpgChecklist ?? {},\n    openFdpgTasks: form?.openFdpgTasks ?? [],\n    isDoneOverview: form?.isDoneOverview ?? {},\n    openDizChecks: form?.openDizChecks ?? [],\n    dizApprovedLocations: form?.dizApprovedLocations ?? [],\n    uacApprovedLocations: form?.uacApprovedLocations ?? [],\n    requestedButExcludedLocations: form?.requestedButExcludedLocations ?? [],\n    signedContracts: form?.signedContracts ?? [],\n    conditionalApprovals: form?.conditionalApprovals ?? [],\n    uacApprovals: form?.uacApprovals ?? [],\n    totalPromisedDataAmount: form?.totalPromisedDataAmount,\n    totalContractedDataAmount: form?.totalContractedDataAmount,\n    declineReasons: form?.declineReasons ?? [],\n    version: transformVersion(form?.version),\n  }\n}\n","import script from \"./PrintProposal.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./PrintProposal.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","FdpgInputSize","CardType","MiiLocation","Countries","Role","ProposalStatus","ParticipantType","ProjectUserType","ProposalTypeOfUse","ProjectHistoryType","UploadFileType","ProjectStatusType","ProjectFetchingType","LocationState","FdpgTaskType","DeclineType","SortDirection","Status","PanelQuery","MII_LOCATIONS","MRI","city","display","definition","email","KUM","UKT","UKU","UKR","UKS","UKAU","UMG","MHH","UKHD","UKSH","UKK","UKM","UKW","UKDD","UKEr","UKF","UKFR","UKGI","UKMR","UKG","UMMD","UM","UMM","KC","UKA","UKB","UME","UKH","UKE","UKJ","UKL","UMR","UKD","UKRUB","VirtualAll","INACTIVE_LOCATIONS","defaultColumns","Object","entries","filter","includes","sort","_aKey","aValue","_bKey","bValue","localeCompare","map","value","label","prop","header","sortable","type","researcherCard","FdpgRequestedInWork","FdpgPendingInWork","FdpgOngoingInWork","FdpgFinished","FdpgMember","Pending","TO_CHECK","FdpgPendingToCheck","IN_WORK","Requested","FdpgRequestedToCheck","Ongoing","FdpgOngoingToCheck","Completed","Researcher","Draft","ResearcherPending","ResearcherOngoing","ResearcherFinished","UacMember","UacPending","UacOngoing","UacFinished","UacRequested","DizMember","DizPending","DizOngoing","DizFinished","DizRequested","cardLabel","terms","size","definitions","instituteCard","kind","lookupMap","lookupKey","hideIfOtherValueIsTruthy","prefix","categoryCard","applicantCards","applicantSection","sectionLabel","mapping","privacyByUsageCard","loopOn","dataPrivacySection","overviewProjectCard","overviewAppendixCard","overviewSection","hideIfThisValueIsFalsy","participantsCards","participantSection","arrayLabel","arrayLabelKey","projectResponsibilityCard","true","false","projectResponsibleCard","projectResponsibilityCards","projectResponsibilitySection","projectUserCard","projectUserSection","card","requestedDataCard","requestedDataSection","generalProjectInformationCard","feasibilityCard","projectDetailsCard","isList","ethicVoteCard","recontactCard","propertyRightsCard","plannedPublicationCardEmpty","plannedPublicationCard","addresseesCard","typeOfUseCard","biosamplesCard","userProjectCards","userProjectSection","getLocaleDateString","locale","valueAsDate","Date","toLocaleDateString","year","month","day","_hoisted_1","_createTextVNode","_defineComponent","String","Boolean","Number","required","setup","__props","_ctx","_cache","undefined","_openBlock","_createElementBlock","_Fragment","_toDisplayString","$t","_unref","__exports__","role","_hoisted_2","dto","dtoAccess","computed","route","useRoute","isPrint","matched","some","name","_component_el_col","_resolveComponent","_component_el_row","_component_el_button","_component_el_card","_createBlock","shadow","default","_withCtx","_createVNode","gutter","_renderList","termIdx","sm","md","_createCommentVNode","_createElementVNode","definitionIdx","content","contentIdx","listItem","listItemIdx","DefinitionCardItem","class","_","actions","length","justify","action","actionIdx","disabled","onClick","headline","_resolveDynamicComponent","item","itemIdx","DefinitionCard","transformEmptyStringToUndefined","trimmed","toISOString","trim","hasNoContent","existingValues","entry","NEW_ID","transformParticipantResearcher","researcher","fdpgUser","_id","isDone","title","firstName","given_name","lastName","family_name","affiliation","transformParticipantInstitute","institute","miiLocation","MII_LOCATION","country","values","organization","streetAddress","street","postalCode","houseNumber","transformParticipantCategory","participantCategory","category","transformProjectUser","projectUser","projectUserType","transformApplicant","applicant","transFormProjectResponsibility","projectResponsibility","applicantIsProjectResponsible","transformProjectResponsible","projectResponsible","transformToApi","mapParticipant","participant","transformParticipants","participants","filteredParticipants","isEmpty","transformProjectDetails","projectDetails","simpleProjectDescription","department","scientificBackground","hypothesisAndQuestionProjectGoals","materialAndMethods","transformEthicVote","ethicVote","isExisting","ethicsCommittee","ethicsVoteNumber","voteFromDate","admitReputationOfAttachment","transformFeasibility","feasibility","id","details","transformGeneralProjectInformation","generalProjectInformation","projectTitle","desiredStartTime","projectDuration","projectFunding","fundingReferenceNumber","transformResourceAndRecontact","resourceAndRecontact","hasEnoughResources","isRecontactingIntended","transformPropertyRights","propertyRights","options","transformPlannedPublication","plannedPublication","noPublicationPlanned","publications","transformPublications","mapPublication","publication","description","authors","filteredPublications","transformAddressees","addressees","desiredLocations","transformTypeOfUse","typeOfUse","usage","dataPrivacyExtra","transformInformationOnRequestedBioSamples","informationOnRequestedBioSamples","Biosample","biosamples","transformBiosamples","mapBiosample","biosample","parameter","laboratoryResources","requirements","count","filteredBiosamples","transformUserProject","userProject","transformRequestedData","requestedData","patientInfo","dataInfo","desiredDataAmount","transformVersion","version","mayor","minor","transformOwner","owner","username","transformForm","form","projectAbbreviation","uploads","isLocked","status","locationStatus","createdAt","submittedAt","updatedAt","dueDateForStatus","history","numberOfRequestedLocations","numberOfApprovedLocations","numberOfSignedLocations","contractAcceptedByResearcher","contractRejectedByResearcher","contractRejectedByResearcherReason","researcherSignedAt","ownerId","ownerName","fdpgChecklist","openFdpgTasks","isDoneOverview","openDizChecks","dizApprovedLocations","uacApprovedLocations","requestedButExcludedLocations","signedContracts","conditionalApprovals","uacApprovals","totalPromisedDataAmount","totalContractedDataAmount","declineReasons","_hoisted_3","FailedStateError","Error","constructor","message","sections","proposalData","ref","dataPrivacyTexts","t","useI18n","overview","ownerEmail","proposalId","dataPrivacyOverview","data","push","text","setUp","window","shouldHidePrintCard","parentKey","secondLevelKey","Array","isArray","onMounted","cardIdx","PrintCard","section","sIdx","sectionItem","sectionItemIdx","labelKey","labelKeyIdx"],"sourceRoot":""}