name: Build and publish container image

on:
  push:


env:
  containerRegistry: tmffdpgregistry.azurecr.io
  imageName: fdpg-pdf
  isMain: ${{ github.ref == 'refs/heads/main' }}
  isDev: ${{ github.ref == 'refs/heads/dev' }}


jobs:
  container_image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: set npmVersionString variable
        run: echo "npmVersionString=" $(node -p "require('./package.json').version") >> "$GITHUB_ENV"

      - name: set pipeDate variable
        run: echo "pipeDate=$(date +%Y%m%d)" >> "$GITHUB_ENV"

      - name: set pipeTime variable
        run: echo "pipeTime=$(date +%H%M%S)" >> "$GITHUB_ENV"

      - name: set variables for main
        if: ${{env.isMain}}
        run: echo "imageTag=${{env.npmVersionString}}_${{env.pipeDate}}_${{env.buildNumberOfDate}}" >> "$GITHUB_ENV"

      - name: set variables for dev
        if: ${{env.isDev}}
        run: echo "imageTag=latest" >> "$GITHUB_ENV"

      - name: set variables when neither main nor dev
        if: ${{env.isDev == 'false' && env.isMain == 'false'}}
        run: echo "imageTag=test-latest" >> "$GITHUB_ENV"

      - name: set buildNumberOfDate variable
        # Github does not support resetting counters => buildNumberOfDate will never be reset to 1, always increases
        run: echo "buildNumberOfDate=${{github.run_number}}" >> "$GITHUB_ENV"

      - name: Login to Docker Hub
        if: false  # TODO wait for Ionos Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: false # TODO: wait for Ionos Registry, then:  ${{env.isMain || env.isDev }}
          tags: ${{env.containerRegistry}}/${{env.imageName}}:${{env.imageTag}}
          build-args: |
            SOFTWARE_VERSION=${{github.ref}}
            BUILD_DATE=${{env.pipeDate}}
            BUILD_TIME=${{env.pipeTime}}
            BUILD_NO_OF_DATE=${{env.buildNumberOfDate}}
            SOURCE_BRANCH=${{github.ref}}
